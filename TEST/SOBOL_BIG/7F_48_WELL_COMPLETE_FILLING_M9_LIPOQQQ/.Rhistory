install.packages("ctv")
ctv::update.views("CausalInference")
warnings()
install.packages("V8")
install.packages("V8")
install.packages("ggm")
install.packages("graph")
install.packages("cit")
install.packages("gsl")
install.packages("gsl")
install.packages("cit")
install.packages("rjags")
install.packages("rjags")
install.packages("DiagrammeRsvg")
ctv::update.views("CausalInference")
warnings()
install.packages("Rmpfr")
install.packages("Rmpfr")
install.packages("Rglpk")
ctv::update.views("CausalInference")
install.packages("WGCNA")
install.packages("MRPC")
install.packages("qtlnet")
BiocManager::install("pmp")
library(pmp)
classes <- MTBLS79$Class
batch <- MTBLS79$Batch
order <- c(1:ncol(MTBLS79))
out <- QCRSC(df = MTBLS79[1:10, ], order = order, batch = MTBLS79$Batch,
classes = MTBLS79$Class, spar = 0, minQC = 4)
MTLBLS79
MTBLS79
p <-MTBLS79
View(p)
MTBLS79[1:10, ]
q<-MTBLS79[1:10, ]
View(q)
p@colData@rownames
library(tidyverse)
library(rawrr)
setwd("~/GIT_FOLDER/surfactin_bayesian_optimisation/TEST/SOBOL_BIG/7F_48_WELL_COMPLETE_FILLING_M9_LIPOQQQ")
library(dplyr)
library(GenomicRanges)
library(S4Vectors)
library(SummarizedExperiment)
#library(pmp)
library(ggplot2)
library(reshape2)
library(gridExtra)
setwd("~/GIT_FOLDER/surfactin_bayesian_optimisation/TEST/SOBOL_BIG/7F_48_WELL_COMPLETE_FILLING_M9_LIPOQQQ")
iteration <- "0"
data <- fread(paste("baseline_corrected/","all_baseline_corrected.csv",sep=""))
original_order <- fread(paste("ms_run_tables/","all_ms_list.csv",sep=""))
order_filtered <- original_order[!grepl("Blank|Solvent", original_order$`File Name`), ]
data <- fread(paste("baseline_corrected/","all_baseline_correction.csv",sep=""))
# Load necessary libraries
library(data.table)
library(pmp)
library(tidyr)
library(dplyr)
library(GenomicRanges)
library(S4Vectors)
library(SummarizedExperiment)
#library(pmp)
library(ggplot2)
library(reshape2)
library(gridExtra)
setwd("~/GIT_FOLDER/surfactin_bayesian_optimisation/TEST/SOBOL_BIG/7F_48_WELL_COMPLETE_FILLING_M9_LIPOQQQ")
iteration <- "0"
data <- fread(paste("baseline_corrected/","all_baseline_correction.csv",sep=""))
original_order <- fread(paste("ms_run_tables/","all_ms_list.csv",sep=""))
order_filtered <- original_order[!grepl("Blank|Solvent", original_order$`File Name`), ]
matrix_df <- pivot_wider(data, names_from = compound, values_from = integral)
df_filtered <- matrix_df[!grepl("Blank|Solvent", matrix_df$file), ]
df_filtered <- as.data.frame(df_filtered)
# Set the first column as row names
row.names(df_filtered) <- df_filtered[[1]]
# Optionally, remove the first column from the dataframe
df_filtered <- df_filtered[-1]
df_filtered<-t(df_filtered)
desired_order <- order_filtered$`File Name`
# Reorder columns in target DataFrame
target_df<- df_filtered[, desired_order]
View(target_df)
sample_order <- c(1:ncol(target_df))
ncol(target_df)
282/6
#sample_order <- c(1:ncol(target_df))
sample_order <- rep(1:47, times = 6)
sample_order
class <- ifelse(grepl("QC", colnames(target_df)),
"QC",
sapply(strsplit(colnames(target_df), "_"), `[`, 2))
class
batch <- sapply(repeated_list, function(x) as.integer(x[1]))
batch <- sapply(desired_order, function(x) as.integer(x[1]))
batch <- sapply(desired_order, function(x) x[1])
batch <- sapply(desired_order, function(x) substring(x, 1, 1))
batch
batch <- sapply(desired_order, function(x) as.integer(substring(x, 1, 1)))
batch
#sample_order <- c(1:ncol(target_df))
sample_order <- rep(1:47, times = 6)
batch <- sapply(desired_order, function(x) as.integer(substring(x, 1, 1)))
#batch <- rep("0", length(colnames(target_df)))
class <- ifelse(grepl("QC", colnames(target_df)),
"QC",
sapply(strsplit(colnames(target_df), "_"), `[`, 2))
new_df<-SummarizedExperiment(assays=list(counts=target_df))
corrected_data <- QCRSC(df=new_df, order=sample_order, batch=batch,
classes=class, spar=0, minQC=4)
plots <- sbc_plot (df=new_df, corrected_df=corrected_data, classes=class,
batch=batch, output="temp.pdf", indexes=seq(1,58))
plots <- sbc_plot (df=new_df, corrected_df=corrected_data, classes=class,
batch=batch, output="temp.pdf", indexes=seq(1,5))
plots <- sbc_plot (df=new_df, corrected_df=corrected_data, classes=class,
batch=batch, output="temp.pdf", indexes=seq(2,2))
data_normalised <- pqn_normalisation(df=corrected_data,classes=class, qc_label="QC")
write.csv(data_normalised, paste("batch_correction/",iteration,"_batch_corrected.csv",sep=""))
View(data_normalised)
data_normalised
assay(data_normalised)
write.csv(assay(data_normalised), paste("batch_correction/",iteration,"_batch_corrected.csv",sep=""))
write.csv(t(assay(data_normalised)), paste("batch_correction/",iteration,"_batch_corrected.csv",sep=""))
assay(data_corrected)
assay(corrected_data)
write.csv(t(assay(corrected_data)), paste("batch_correction/",iteration,"_batch_corrected.csv",sep=""))
