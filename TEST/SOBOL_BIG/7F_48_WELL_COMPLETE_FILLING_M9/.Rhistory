install.packages("ctv")
ctv::update.views("CausalInference")
warnings()
install.packages("V8")
install.packages("V8")
install.packages("ggm")
install.packages("graph")
install.packages("cit")
install.packages("gsl")
install.packages("gsl")
install.packages("cit")
install.packages("rjags")
install.packages("rjags")
install.packages("DiagrammeRsvg")
ctv::update.views("CausalInference")
warnings()
install.packages("Rmpfr")
install.packages("Rmpfr")
install.packages("Rglpk")
ctv::update.views("CausalInference")
install.packages("WGCNA")
install.packages("MRPC")
install.packages("qtlnet")
BiocManager::install("pmp")
library(pmp)
classes <- MTBLS79$Class
batch <- MTBLS79$Batch
order <- c(1:ncol(MTBLS79))
out <- QCRSC(df = MTBLS79[1:10, ], order = order, batch = MTBLS79$Batch,
classes = MTBLS79$Class, spar = 0, minQC = 4)
MTLBLS79
MTBLS79
p <-MTBLS79
View(p)
MTBLS79[1:10, ]
q<-MTBLS79[1:10, ]
View(q)
p@colData@rownames
## ----include = FALSE----------------------------------------------------------
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
## ----message=FALSE, warning=FALSE---------------------------------------------
library(pmp)
library(SummarizedExperiment)
library(S4Vectors)
## -----------------------------------------------------------------------------
data(MTBLS79)
MTBLS79
## -----------------------------------------------------------------------------
sum(is.na(assay(MTBLS79)))
sum(is.na(assay(MTBLS79))) / length(assay(MTBLS79)) * 100
## -----------------------------------------------------------------------------
MTBLS79_filtered <- filter_samples_by_mv(df=MTBLS79, max_perc_mv=0.1)
MTBLS79_filtered
sum(is.na(assay(MTBLS79_filtered)))
## -----------------------------------------------------------------------------
MTBLS79_filtered <- filter_peaks_by_fraction(df=MTBLS79_filtered, min_frac=0.9,
classes=MTBLS79_filtered$Class, method="QC", qc_label="QC")
MTBLS79_filtered
sum(is.na(assay(MTBLS79_filtered)))
## -----------------------------------------------------------------------------
MTBLS79_filtered <- filter_peaks_by_fraction(df=MTBLS79_filtered, min_frac=0.9,
classes=MTBLS79_filtered$Class, method="across")
MTBLS79_filtered
sum(is.na(assay(MTBLS79_filtered)))
## -----------------------------------------------------------------------------
MTBLS79_filtered <- filter_peaks_by_rsd(df=MTBLS79_filtered, max_rsd=30,
classes=MTBLS79_filtered$Class, qc_label="QC")
MTBLS79_filtered
sum(is.na(assay(MTBLS79_filtered)))
## -----------------------------------------------------------------------------
processing_history(MTBLS79_filtered)
## -----------------------------------------------------------------------------
MTBLS79_pqn_normalised <- pqn_normalisation(df=MTBLS79_filtered,
classes=MTBLS79_filtered$Class, qc_label="QC")
assay(MTBLS79_pqn_normalised)
assay(MTBLS79_filtered)
assay(MTBLS79_pqn_normalised)
MTBLS79_pqn_normalised
MTBLS79_pqn_normalised$pqn_coef
new_df<-SummarizedExperiment(assays=list(counts=target_df),
rownames=rownames(target_df), colnames=colnames(target_df))
new_df<-SummarizedExperiment(assays=list(counts=target_df))
setwd("~/GIT_FOLDER/surfactin_bayesian_optimisation/TEST/SOBOL_BIG/7F_48_WELL_COMPLETE_FILLING_M9")
# Load necessary libraries
library(data.table)
library(pmp)
library(tidyr)
library(dplyr)
library(GenomicRanges)
library(S4Vectors)
library(SummarizedExperiment)
#library(pmp)
library(ggplot2)
library(reshape2)
library(gridExtra)
setwd("~/GIT_FOLDER/surfactin_bayesian_optimisation/TEST/SOBOL_BIG/7F_48_WELL_COMPLETE_FILLING_M9")
iteration <- "0"
data <- fread(paste("baseline_corrected/",iteration,"_baseline_corrected.csv",sep=""))
original_order <- fread(paste("ms_run_tables/",iteration,"_real_ms_run.csv",sep=""))
order_filtered <- original_order[!grepl("Blank|Solvent", original_order$`File Name`), ]
matrix_df <- pivot_wider(data, names_from = compound, values_from = integral)
df_filtered <- matrix_df[!grepl("Blank|Solvent", matrix_df$file), ]
df_filtered <- as.data.frame(df_filtered)
# Set the first column as row names
row.names(df_filtered) <- df_filtered[[1]]
# Optionally, remove the first column from the dataframe
df_filtered <- df_filtered[-1]
# Remove columns
df_filtered <- df_filtered %>% select(-c(Cyanocobalamin, Extra2, Propionate, Isovalerate, Thiamine, Choline,`Pantothenic acid`))
#df_filtered[df_filtered==0]<-1
zero_positions <- which(df_filtered == 0, arr.ind = TRUE)
df_filtered<-t(df_filtered)
desired_order <- order_filtered$`File Name`
# Reorder columns in target DataFrame
target_df<- df_filtered[, desired_order]
sample_order <- c(1:ncol(target_df))
batch <- rep("0", length(colnames(target_df)))
class <- ifelse(grepl("QC", colnames(target_df)),
"QC",
sapply(strsplit(colnames(target_df), "_"), `[`, 2))
new_df<-SummarizedExperiment(assays=list(counts=target_df))
View(new_df)
new-df
new_df
new_df<-SummarizedExperiment(assays=list(counts=target_df))
corrected_data <- QCRSC(df=new_df, order=sample_order, batch=batch,
classes=class, spar=0, minQC=4)
plots <- sbc_plot (df=new_df, corrected_df=corrected_data, classes=class,
batch=batch, output="temp.pdf", indexes=seq(1,58))
data_normalised <- pqn_normalisation(df=corrected_data,classes=class, qc_label="QC")
data_normalised
data_normalised$pqn_coef
assay(data_normalised)
## -----------------------------------------------------------------------------
MTBLS79_filtered <- filter_peaks_by_rsd(df=MTBLS79_filtered, max_rsd=30,
classes=MTBLS79_filtered$Class, qc_label="QC")
MTBLS79_filtered
View(MTBLS79_filtered)
